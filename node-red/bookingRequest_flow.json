[
    {
        "id": "b924b14dcda20cbb",
        "type": "tab",
        "label": "Booking Requests",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6901d4fcacc93bbf",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Requests Setup",
        "style": {
            "label": true
        },
        "nodes": [
            "961f76e44ba0a009",
            "bbf9890dd64abc81",
            "926cfadeb66f7f33",
            "d4f180f1dc1d3cdb",
            "9ee6ad0389984148",
            "24821ce271c5ab34",
            "81326539dd149365"
        ],
        "x": 194,
        "y": 79,
        "w": 1152,
        "h": 162
    },
    {
        "id": "597f5f964bf25ad5",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage start session of user",
        "style": {
            "label": true
        },
        "nodes": [
            "423168a686040bc3",
            "13c1880ac68cc0ea",
            "7d58709315fc281b",
            "8a0239e28892322b",
            "3eeead223038acca",
            "becaa70f8c4830e8",
            "e972e80b47719627",
            "c860181a71e91a26",
            "82c271397c7ccc71",
            "cf646de67571b9ea",
            "027efa0cb39b52a7",
            "ba429d4414b8d5cd",
            "58605633c31b8470",
            "7e8fabb70c920354",
            "2a2f88be988812ec",
            "0cb05d914125f8a3",
            "2757483e6be1bd42",
            "4b022fd9833b76e6",
            "591f39b0b7e50490"
        ],
        "x": 194,
        "y": 379,
        "w": 1432,
        "h": 302
    },
    {
        "id": "22a8be0a1056b48a",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage date selection of user",
        "style": {
            "label": true
        },
        "nodes": [
            "df0a57ba6835c338",
            "3c1130f29aba3ed8",
            "b34073113d7ead32",
            "7612b24b279c7a9e",
            "2cc3773bd3b96cb3",
            "a4ca53a1db45bb29",
            "854bbca4df5e38ad",
            "3e7acb6429615813",
            "7516d2d82da92ed7",
            "93069f0eae31b8eb",
            "a2bb6fe7356e0837",
            "508b0e0c7c0c300e",
            "3d0419a23ea94149",
            "4ca3ca98d109a453",
            "debb7a17f7080f62",
            "8580efe4bb2abbce",
            "9ff2373997d32be6"
        ],
        "x": 194,
        "y": 719,
        "w": 1052,
        "h": 362
    },
    {
        "id": "fc5c3a27e3769f0f",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage slot selection of user",
        "style": {
            "label": true
        },
        "nodes": [
            "729a3a7eb45f1b2e",
            "d834a0d9e8f16f49",
            "a084aa0c75b1853c",
            "3290f2a11dd54627",
            "b3092378f7ef4649",
            "8d9b0737ed48871e",
            "cd7e40b58c4755db",
            "eacf5d7107ef6b2f",
            "78f4ee526a240826"
        ],
        "x": 194,
        "y": 1139,
        "w": 712,
        "h": 242
    },
    {
        "id": "961f76e44ba0a009",
        "type": "inject",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "Setup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "bbf9890dd64abc81",
                "9ee6ad0389984148",
                "81326539dd149365"
            ]
        ]
    },
    {
        "id": "bbf9890dd64abc81",
        "type": "smeFormSetup",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "saveLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "saveLocationType": "flow",
        "submitEnabled": "1",
        "retainStatus": "1",
        "submitText": "Confirm",
        "submitTextType": "str",
        "recipientId": "",
        "recipientIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingSessionsChannelId",
        "channelIdType": "flow",
        "receiverType": "channel",
        "refName": "bookingRequest_dateSelectionForm",
        "refNameType": "str",
        "x": 620,
        "y": 120,
        "wires": [
            [
                "926cfadeb66f7f33"
            ]
        ]
    },
    {
        "id": "926cfadeb66f7f33",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "",
        "reference": "startDate",
        "referenceType": "str",
        "component": "datepicker",
        "title": "Choose a Date",
        "titleType": "str",
        "required": "true",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "x": 940,
        "y": 120,
        "wires": [
            [
                "d4f180f1dc1d3cdb"
            ]
        ]
    },
    {
        "id": "d4f180f1dc1d3cdb",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "",
        "reference": "spanSelection",
        "referenceType": "str",
        "component": "singlechoice",
        "title": "Show slots for",
        "titleType": "str",
        "required": "true",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [
            {
                "name": "Selected Day",
                "value": "selectedDay"
            },
            {
                "name": "Next 7 days",
                "value": "nextWeek"
            }
        ],
        "choiceSelectionMode": "dropdown",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "x": 1200,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "423168a686040bc3",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 460,
        "wires": [
            [],
            [
                "8a0239e28892322b"
            ]
        ]
    },
    {
        "id": "13c1880ac68cc0ea",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "startBookingSessionForm",
        "referenceType": "str",
        "messageId": "",
        "messageIdType": "str",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "7d58709315fc281b"
            ]
        ]
    },
    {
        "id": "7d58709315fc281b",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 460,
        "wires": [
            [
                "423168a686040bc3"
            ]
        ]
    },
    {
        "id": "8a0239e28892322b",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "027efa0cb39b52a7",
                "e972e80b47719627"
            ]
        ]
    },
    {
        "id": "9ee6ad0389984148",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "Prepare sessions",
        "func": "flow.set(\"userSessions\",[],\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3eeead223038acca",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "bookingRequest_dateSelectionForm",
        "message": "form",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>This is an html message</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "formLocationType": "flow",
        "x": 910,
        "y": 440,
        "wires": [
            [
                "becaa70f8c4830e8"
            ]
        ]
    },
    {
        "id": "becaa70f8c4830e8",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingRequestChannelId",
        "channelIdType": "flow",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedDateSelectionMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1200,
        "y": 440,
        "wires": [
            [
                "82c271397c7ccc71"
            ]
        ]
    },
    {
        "id": "e972e80b47719627",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "New User?",
        "property": "newUser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 520,
        "wires": [
            [
                "3eeead223038acca"
            ],
            [
                "0cb05d914125f8a3"
            ]
        ]
    },
    {
        "id": "c860181a71e91a26",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "searchMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingsAdminChannelId",
        "channelIdType": "flow",
        "title": "",
        "titleType": "str",
        "saveLocation": "searchMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "2757483e6be1bd42"
            ]
        ]
    },
    {
        "id": "82c271397c7ccc71",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Save Search MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.searchMsgId = msg.savedDateSelectionMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cf646de67571b9ea",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "emptySlotsMsg",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>Select a date to see available slots</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "formLocationType": "flow",
        "x": 920,
        "y": 580,
        "wires": [
            [
                "58605633c31b8470"
            ]
        ]
    },
    {
        "id": "027efa0cb39b52a7",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "ba429d4414b8d5cd"
            ]
        ]
    },
    {
        "id": "ba429d4414b8d5cd",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "New User?",
        "property": "newUser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "cf646de67571b9ea"
            ],
            [
                "4b022fd9833b76e6"
            ]
        ]
    },
    {
        "id": "58605633c31b8470",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingRequestChannelId",
        "channelIdType": "flow",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1120,
        "y": 580,
        "wires": [
            [
                "2a2f88be988812ec"
            ]
        ]
    },
    {
        "id": "7e8fabb70c920354",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "slotsMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingsAdminChannelId",
        "channelIdType": "flow",
        "title": "",
        "titleType": "str",
        "saveLocation": "searchMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1150,
        "y": 640,
        "wires": [
            [
                "591f39b0b7e50490"
            ]
        ]
    },
    {
        "id": "2a2f88be988812ec",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Save Slots MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.slotsMsgId = msg.savedSlotsMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "df0a57ba6835c338",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "bookingRequest_dateSelectionForm",
        "referenceType": "str",
        "messageId": "",
        "messageIdType": "str",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 430,
        "y": 760,
        "wires": [
            [
                "2cc3773bd3b96cb3"
            ]
        ]
    },
    {
        "id": "3c1130f29aba3ed8",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Span selection",
        "property": "spanSelection",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "selectedDay",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nextWeek",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 840,
        "wires": [
            [
                "b34073113d7ead32"
            ],
            [
                "7612b24b279c7a9e"
            ]
        ]
    },
    {
        "id": "b34073113d7ead32",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Set 1 day",
        "rules": [
            {
                "t": "set",
                "p": "daysToReturn",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "3e7acb6429615813"
            ]
        ]
    },
    {
        "id": "7612b24b279c7a9e",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Set 7 days",
        "rules": [
            {
                "t": "set",
                "p": "daysToReturn",
                "pt": "msg",
                "to": "7",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 860,
        "wires": [
            [
                "3e7acb6429615813"
            ]
        ]
    },
    {
        "id": "2cc3773bd3b96cb3",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 800,
        "wires": [
            [
                "a4ca53a1db45bb29"
            ]
        ]
    },
    {
        "id": "a4ca53a1db45bb29",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 800,
        "wires": [
            [],
            [
                "854bbca4df5e38ad"
            ]
        ]
    },
    {
        "id": "854bbca4df5e38ad",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 840,
        "wires": [
            [
                "3c1130f29aba3ed8"
            ]
        ]
    },
    {
        "id": "3e7acb6429615813",
        "type": "link call",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "",
        "links": [
            "8999cbbf80801462"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 990,
        "y": 840,
        "wires": [
            [
                "7516d2d82da92ed7"
            ]
        ]
    },
    {
        "id": "24821ce271c5ab34",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "channel_create",
        "actionText": "Channel - Create",
        "recipientId": "",
        "recipientIdType": "str",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "Booking Sessions",
        "titleType": "str",
        "saveLocation": "#:(file)::bookingSessionsChannelId",
        "saveLocationType": "flow",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 790,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "81326539dd149365",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "New Channel?",
        "property": "#:(file)::bookingSessionsChannelId",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 200,
        "wires": [
            [
                "24821ce271c5ab34"
            ]
        ]
    },
    {
        "id": "7516d2d82da92ed7",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Filter only free-enabled slots",
        "func": "let validSlots = [];\nmsg.foundSlots.forEach(function(slotDay) {\n    let slotsToAdd = [];\n    slotDay.slots.forEach(function(slot) {\n        if (slot.enabled && slot.status === \"free\") {\n            slotsToAdd.push(slot);\n        }\n    });\n    if (slotsToAdd.length > 0) {\n        validSlots.push({\n            day: slotDay.day,\n            slots: slotsToAdd\n        });\n    }\n});\n\nmsg.validSlots = validSlots;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "93069f0eae31b8eb"
            ]
        ]
    },
    {
        "id": "93069f0eae31b8eb",
        "type": "smeFormSetup",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "saveLocation": "slotSelectionForm",
        "saveLocationType": "msg",
        "submitEnabled": "1",
        "retainStatus": "0",
        "submitText": "Book",
        "submitTextType": "str",
        "recipientId": "",
        "recipientIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "bookingSessionsChannelId",
        "channelIdType": "flow",
        "receiverType": "channel",
        "refName": "bookingRequest_slotSelectionForm",
        "refNameType": "str",
        "x": 460,
        "y": 940,
        "wires": [
            [
                "a2bb6fe7356e0837"
            ]
        ]
    },
    {
        "id": "a2bb6fe7356e0837",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Available Slots label",
        "reference": "availableSlots",
        "referenceType": "str",
        "component": "label",
        "title": "Available Slots",
        "titleType": "str",
        "required": "true",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "x": 800,
        "y": 940,
        "wires": [
            [
                "508b0e0c7c0c300e"
            ]
        ]
    },
    {
        "id": "508b0e0c7c0c300e",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Modify Slot Selection Form Options",
        "func": "let formComponents = msg.slotSelectionForm.formComponents;\nlet validSlots = msg.validSlots;\nlet config = msg.config;\n\nif (formComponents !== undefined) {\n    validSlots.forEach(function(slotDay) {\n        let currentDay = slotDay.day;\n        let currentFormComponent = {\n            refName: `slotsToBook_${currentDay}`,\n            formComponentType: 'singlechoice',\n            title: `${currentDay}`,\n            requiredSelection: true,\n            options: []\n        };\n        slotDay.slots.forEach(function(slot) {\n            let status = \"\";           \n            currentFormComponent.options.push({\n                name: `${moment.tz(slot.start, config.timezone).format('HH:mm')} - ${moment.tz(slot.end, config.timezone).format('HH:mm')}`,\n                value: slot.id\n            });           \n        });\n        formComponents.push(currentFormComponent);\n    });\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment-timezone"
            }
        ],
        "x": 1080,
        "y": 940,
        "wires": [
            [
                "3d0419a23ea94149"
            ]
        ]
    },
    {
        "id": "3d0419a23ea94149",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Form Message",
        "message": "form",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>This is an html message</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "slotSelectionForm",
        "formLocationType": "msg",
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "4ca3ca98d109a453"
            ]
        ]
    },
    {
        "id": "4ca3ca98d109a453",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "New Msg?",
        "property": "slotsMsgId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "debb7a17f7080f62"
            ],
            [
                "9ff2373997d32be6"
            ]
        ]
    },
    {
        "id": "debb7a17f7080f62",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 760,
        "y": 1000,
        "wires": [
            [
                "8580efe4bb2abbce"
            ]
        ]
    },
    {
        "id": "8580efe4bb2abbce",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Save Slots MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.slotsMsgId = msg.savedSlotsMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "9ff2373997d32be6",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "slotsMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 770,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "729a3a7eb45f1b2e",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "bookingRequest_slotSelectionForm",
        "referenceType": "str",
        "messageId": "#:(file)::slotSelectionFormMessageId",
        "messageIdType": "flow",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "d834a0d9e8f16f49"
            ]
        ]
    },
    {
        "id": "d834a0d9e8f16f49",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "a084aa0c75b1853c"
            ]
        ]
    },
    {
        "id": "a084aa0c75b1853c",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1220,
        "wires": [
            [],
            [
                "3290f2a11dd54627"
            ]
        ]
    },
    {
        "id": "3290f2a11dd54627",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1260,
        "wires": [
            [
                "b3092378f7ef4649"
            ]
        ]
    },
    {
        "id": "b3092378f7ef4649",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Extract booking slot",
        "func": "let bookingSlot = {};\nfor (const [key, value] of Object.entries(msg)) {\n  if (key.includes('slotsToBook')) {\n    let day = key.split('_')[1];\n      bookingSlot =  {\n          day: day,\n          id: value\n        }\n  }\n}\n\nmsg.bookingSlot = bookingSlot;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1260,
        "wires": [
            [
                "8d9b0737ed48871e"
            ]
        ]
    },
    {
        "id": "8d9b0737ed48871e",
        "type": "link call",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "links": [
            "e242d7534c8d4c04"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "78f4ee526a240826"
            ]
        ]
    },
    {
        "id": "cd7e40b58c4755db",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "message": "webview",
        "text": "This is a text message.",
        "textType": "str",
        "html": "",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "paymentUrl",
        "urlType": "msg",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 540,
        "y": 1340,
        "wires": [
            [
                "eacf5d7107ef6b2f"
            ]
        ]
    },
    {
        "id": "eacf5d7107ef6b2f",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "",
        "titleType": "str",
        "saveLocation": "aaa",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 740,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "78f4ee526a240826",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Prepare Payment Link",
        "func": "msg.paymentUrl = `${msg.bookedSlot.paymentUrl}?client_reference_id=${msg.accountId}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1340,
        "wires": [
            [
                "cd7e40b58c4755db"
            ]
        ]
    },
    {
        "id": "0cb05d914125f8a3",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Search message expired",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<i>Search message expired</i>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 830,
        "y": 520,
        "wires": [
            [
                "c860181a71e91a26"
            ]
        ]
    },
    {
        "id": "2757483e6be1bd42",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "3eeead223038acca"
            ]
        ]
    },
    {
        "id": "4b022fd9833b76e6",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Search message expired",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<i>Search message expired</i>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 890,
        "y": 640,
        "wires": [
            [
                "7e8fabb70c920354"
            ]
        ]
    },
    {
        "id": "591f39b0b7e50490",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 640,
        "wires": [
            [
                "cf646de67571b9ea"
            ]
        ]
    },
    {
        "id": "6e83c6c7ab618392",
        "type": "link in",
        "z": "b924b14dcda20cbb",
        "name": "in_fromListener",
        "links": [
            "b0bec7a3b4683781"
        ],
        "x": 95,
        "y": 880,
        "wires": [
            [
                "13c1880ac68cc0ea",
                "df0a57ba6835c338",
                "729a3a7eb45f1b2e"
            ]
        ]
    },
    {
        "id": "f9adc5c8242ed986",
        "type": "sme-main-connector",
        "name": "SMECON",
        "apiKeyType": "env"
    }
]