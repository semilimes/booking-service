[
    {
        "id": "b924b14dcda20cbb",
        "type": "tab",
        "label": "Booking Requests",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6901d4fcacc93bbf",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Requests Setup",
        "style": {
            "label": true
        },
        "nodes": [
            "961f76e44ba0a009",
            "bbf9890dd64abc81",
            "926cfadeb66f7f33",
            "9ee6ad0389984148",
            "24821ce271c5ab34",
            "81326539dd149365",
            "d8f7194d1c3136c2"
        ],
        "x": 224,
        "y": 39,
        "w": 1112,
        "h": 162
    },
    {
        "id": "597f5f964bf25ad5",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage start session of user",
        "style": {
            "label": true
        },
        "nodes": [
            "423168a686040bc3",
            "13c1880ac68cc0ea",
            "7d58709315fc281b",
            "8a0239e28892322b",
            "d10f74ca26b40671",
            "49af6cd7dea7ab46",
            "8ad23ed01ca8fa1b",
            "6bc665065695786d",
            "458795b1f93cb344",
            "df9883510d703da2",
            "d00f7ae527a9108b",
            "54c89da65ccfcfd0",
            "f046a870709b86f3",
            "29144b0320392c99",
            "ae4af68b6127b1f5",
            "02735ca0e5ca2452",
            "a397339cf8d7f7b1",
            "b781d35d352decb0",
            "27c160f10c073a7a",
            "3748cd00cd3508fd",
            "85276083ac7a289b",
            "fe091290511ddba6",
            "61121cf0e39e9c50",
            "ef3f7c79d2099982"
        ],
        "x": 464,
        "y": 239,
        "w": 1482,
        "h": 482
    },
    {
        "id": "22a8be0a1056b48a",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage date selection of user",
        "style": {
            "label": true
        },
        "nodes": [
            "df0a57ba6835c338",
            "2cc3773bd3b96cb3",
            "a4ca53a1db45bb29",
            "854bbca4df5e38ad",
            "3e7acb6429615813",
            "7516d2d82da92ed7",
            "daadf1e396c5fb61",
            "1ffc43563128b234",
            "f9101a9b461b13ac",
            "f98bb5ba0e912b62",
            "590954c737f00e27",
            "5cef292de698b7ea",
            "0004dafa87abc0c6",
            "5dc29e09b8fcf911",
            "bae3c1aeb01a6e8e",
            "32343510d7720d62",
            "7a7e797bfbe8444e",
            "2a4945271125366b",
            "4141f55dd30b4792",
            "9d246304e2a9d47b"
        ],
        "x": 224,
        "y": 739,
        "w": 1422,
        "h": 442
    },
    {
        "id": "fc5c3a27e3769f0f",
        "type": "group",
        "z": "b924b14dcda20cbb",
        "name": "Manage slot selection of user",
        "style": {
            "label": true
        },
        "nodes": [
            "729a3a7eb45f1b2e",
            "d834a0d9e8f16f49",
            "a084aa0c75b1853c",
            "3290f2a11dd54627",
            "8d9b0737ed48871e",
            "cd7e40b58c4755db",
            "eacf5d7107ef6b2f",
            "78f4ee526a240826",
            "5fe7aa5e14ed8aae",
            "cb727bc03427a8d3",
            "f9dc491d16d795fd",
            "29ba1089da48acb1"
        ],
        "x": 224,
        "y": 1279,
        "w": 1282,
        "h": 262
    },
    {
        "id": "6e83c6c7ab618392",
        "type": "link in",
        "z": "b924b14dcda20cbb",
        "name": "in_fromListener",
        "links": [
            "b0bec7a3b4683781"
        ],
        "x": 125,
        "y": 840,
        "wires": [
            [
                "13c1880ac68cc0ea",
                "df0a57ba6835c338",
                "729a3a7eb45f1b2e"
            ]
        ]
    },
    {
        "id": "f8a032e8119e4ea6",
        "type": "link in",
        "z": "b924b14dcda20cbb",
        "name": "in_resetUserSession",
        "links": [
            "73c72fe7ade25524"
        ],
        "x": 125,
        "y": 380,
        "wires": [
            [
                "7bc84279caeb96c5"
            ]
        ]
    },
    {
        "id": "7bc84279caeb96c5",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "name": "Set User end session params",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "payload.accountId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endSession",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "8a0239e28892322b"
            ]
        ]
    },
    {
        "id": "d10f74ca26b40671",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "New User?",
        "property": "newUser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 380,
        "wires": [
            [
                "49af6cd7dea7ab46"
            ],
            [
                "a397339cf8d7f7b1"
            ]
        ]
    },
    {
        "id": "49af6cd7dea7ab46",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "bookingRequest_dateSelectionForm",
        "message": "form",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>This is an html message</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "formLocationType": "flow",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "8ad23ed01ca8fa1b"
            ]
        ]
    },
    {
        "id": "8ad23ed01ca8fa1b",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingRequestChannelId",
        "channelIdType": "flow",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedDateSelectionMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1480,
        "y": 360,
        "wires": [
            [
                "6bc665065695786d"
            ]
        ]
    },
    {
        "id": "6bc665065695786d",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Save Search MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.searchMsgId = msg.savedDateSelectionMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 360,
        "wires": [
            [
                "458795b1f93cb344"
            ]
        ]
    },
    {
        "id": "458795b1f93cb344",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "df9883510d703da2"
            ]
        ]
    },
    {
        "id": "df9883510d703da2",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "emptySlotsMsg",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>Select a date to see available slots</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "formLocationType": "flow",
        "x": 1300,
        "y": 420,
        "wires": [
            [
                "d00f7ae527a9108b"
            ]
        ]
    },
    {
        "id": "d00f7ae527a9108b",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingRequestChannelId",
        "channelIdType": "flow",
        "silent": "true",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1500,
        "y": 420,
        "wires": [
            [
                "54c89da65ccfcfd0"
            ]
        ]
    },
    {
        "id": "54c89da65ccfcfd0",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Save Slots MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.slotsMsgId = msg.savedSlotsMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f046a870709b86f3",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 680,
        "wires": [
            [
                "29144b0320392c99"
            ]
        ]
    },
    {
        "id": "29144b0320392c99",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "PaymentMsgId Exists?",
        "property": "paymentMsgId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 680,
        "wires": [
            [
                "02735ca0e5ca2452"
            ],
            [
                "fe091290511ddba6"
            ]
        ]
    },
    {
        "id": "ae4af68b6127b1f5",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "P2P - Update PaymentMsgId",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "paymentMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingsAdminChannelId",
        "channelIdType": "flow",
        "silent": "true",
        "title": "",
        "titleType": "str",
        "saveLocation": "searchMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1280,
        "y": 660,
        "wires": [
            [
                "ef3f7c79d2099982"
            ]
        ]
    },
    {
        "id": "02735ca0e5ca2452",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Payment message expired",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<i>Payment message expired</i>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "ae4af68b6127b1f5"
            ]
        ]
    },
    {
        "id": "a397339cf8d7f7b1",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Search message expired",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<i>Search message expired</i>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 750,
        "y": 540,
        "wires": [
            [
                "b781d35d352decb0"
            ]
        ]
    },
    {
        "id": "b781d35d352decb0",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "P2P - Update SearchMsgId",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "searchMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingsAdminChannelId",
        "channelIdType": "flow",
        "silent": "true",
        "title": "",
        "titleType": "str",
        "saveLocation": "searchMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "27c160f10c073a7a"
            ]
        ]
    },
    {
        "id": "27c160f10c073a7a",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 600,
        "wires": [
            [
                "3748cd00cd3508fd"
            ]
        ]
    },
    {
        "id": "3748cd00cd3508fd",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Search message expired",
        "message": "html",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<i>Search message expired</i>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 770,
        "y": 600,
        "wires": [
            [
                "85276083ac7a289b"
            ]
        ]
    },
    {
        "id": "85276083ac7a289b",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "P2P - Update SlotsMsgId",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "slotsMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingsAdminChannelId",
        "channelIdType": "flow",
        "silent": "true",
        "title": "",
        "titleType": "str",
        "saveLocation": "searchMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "f046a870709b86f3"
            ]
        ]
    },
    {
        "id": "fe091290511ddba6",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "New session?",
        "property": "endSession",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 1840,
        "y": 680,
        "wires": [
            [
                "61121cf0e39e9c50"
            ]
        ]
    },
    {
        "id": "61121cf0e39e9c50",
        "type": "delay",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1840,
        "y": 640,
        "wires": [
            [
                "49af6cd7dea7ab46"
            ]
        ]
    },
    {
        "id": "961f76e44ba0a009",
        "type": "inject",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "Setup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "bbf9890dd64abc81",
                "9ee6ad0389984148",
                "81326539dd149365"
            ]
        ]
    },
    {
        "id": "bbf9890dd64abc81",
        "type": "smeFormSetup",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "saveLocation": "#:(file)::bookingRequest_dateSelectionForm",
        "saveLocationType": "flow",
        "submitEnabled": "1",
        "retainStatus": "1",
        "submitText": "Search",
        "submitTextType": "str",
        "recipientId": "",
        "recipientIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingSessionsChannelId",
        "channelIdType": "flow",
        "receiverType": "channel",
        "refName": "bookingRequest_dateSelectionForm",
        "refNameType": "str",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "d8f7194d1c3136c2"
            ]
        ]
    },
    {
        "id": "926cfadeb66f7f33",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "",
        "reference": "startDate",
        "referenceType": "str",
        "component": "datepicker",
        "title": "",
        "titleType": "str",
        "required": "false",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Pick a date",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "eventsDisplayMode": "list",
        "events": "[]",
        "eventsType": "json",
        "x": 1210,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9ee6ad0389984148",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "Reset user sessions",
        "func": "flow.set(\"userSessions\",[],\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "24821ce271c5ab34",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "channel_create",
        "actionText": "Channel - Create",
        "recipientId": "",
        "recipientIdType": "str",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "silent": "true",
        "title": "Booking Sessions",
        "titleType": "str",
        "saveLocation": "#:(file)::bookingSessionsChannelId",
        "saveLocationType": "flow",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 820,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "81326539dd149365",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "New Channel?",
        "property": "#:(file)::bookingSessionsChannelId",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "24821ce271c5ab34"
            ]
        ]
    },
    {
        "id": "d8f7194d1c3136c2",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "6901d4fcacc93bbf",
        "name": "",
        "reference": "labelSearch",
        "referenceType": "str",
        "component": "label",
        "title": "Hit Search to check the upcoming slots for the next 10 days or select a specific date",
        "titleType": "str",
        "required": "false",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "eventsDisplayMode": "list",
        "events": "[]",
        "eventsType": "json",
        "x": 980,
        "y": 80,
        "wires": [
            [
                "926cfadeb66f7f33"
            ]
        ]
    },
    {
        "id": "423168a686040bc3",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 320,
        "wires": [
            [],
            [
                "8a0239e28892322b"
            ]
        ]
    },
    {
        "id": "13c1880ac68cc0ea",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "startBookingSessionForm",
        "referenceType": "str",
        "messageId": "",
        "messageIdType": "str",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 670,
        "y": 280,
        "wires": [
            [
                "7d58709315fc281b"
            ]
        ]
    },
    {
        "id": "7d58709315fc281b",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "423168a686040bc3"
            ]
        ]
    },
    {
        "id": "8a0239e28892322b",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n    msg.paymentMsgId = currentUser.paymentMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "d10f74ca26b40671"
            ]
        ]
    },
    {
        "id": "df0a57ba6835c338",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "bookingRequest_dateSelectionForm",
        "referenceType": "str",
        "messageId": "",
        "messageIdType": "str",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 460,
        "y": 780,
        "wires": [
            [
                "2cc3773bd3b96cb3"
            ]
        ]
    },
    {
        "id": "2cc3773bd3b96cb3",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 820,
        "wires": [
            [
                "a4ca53a1db45bb29"
            ]
        ]
    },
    {
        "id": "a4ca53a1db45bb29",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 820,
        "wires": [
            [],
            [
                "854bbca4df5e38ad"
            ]
        ]
    },
    {
        "id": "854bbca4df5e38ad",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 860,
        "wires": [
            [
                "2a4945271125366b"
            ]
        ]
    },
    {
        "id": "3e7acb6429615813",
        "type": "link call",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "",
        "links": [
            "8999cbbf80801462"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1470,
        "y": 880,
        "wires": [
            [
                "7516d2d82da92ed7"
            ]
        ]
    },
    {
        "id": "7516d2d82da92ed7",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Filter only free-enabled slots",
        "func": "let validSlots = [];\nmsg.foundSlots.forEach(function(slotDay) {\n    let slotsToAdd = [];\n    slotDay.slots.forEach(function(slot) {\n        if (slot.enabled === true && slot.status === \"free\") {\n            slotsToAdd.push(slot);\n        }\n    });\n    if (slotsToAdd.length > 0) {\n        validSlots.push({\n            day: slotDay.day,\n            slots: slotsToAdd\n        });\n    }\n});\n\nmsg.validSlots = validSlots;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 920,
        "wires": [
            [
                "5dc29e09b8fcf911"
            ]
        ]
    },
    {
        "id": "daadf1e396c5fb61",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Generate Events for picker",
        "func": "let validSlots = msg.validSlots;\nlet config = msg.config;\n\nlet events = [];\n\nvalidSlots.forEach(function(slotDay) {\n    slotDay.slots.forEach(function(slot) {\n        let status = \"FREE\";\n        events.push({\n            id: slot.id,\n            start: slot.start,\n            title: `${moment.tz(slot.start, config.timezone).format('HH:mm')} - ${moment.tz(slot.end, config.timezone).format('HH:mm')}`,\n            description: `${status}`,\n            additionalInfo: {\n                day: slotDay.day,\n                slotId: slot.id\n            }\n        });         \n    });\n});\n\nmsg.calendarEvents = events;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment-timezone"
            }
        ],
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "bae3c1aeb01a6e8e"
            ]
        ]
    },
    {
        "id": "1ffc43563128b234",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Available Slots label",
        "reference": "availableSlots",
        "referenceType": "str",
        "component": "label",
        "title": "Available Slots",
        "titleType": "str",
        "required": "true",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "eventsDisplayMode": "list",
        "events": "[]",
        "eventsType": "json",
        "x": 810,
        "y": 1000,
        "wires": [
            [
                "daadf1e396c5fb61"
            ]
        ]
    },
    {
        "id": "f9101a9b461b13ac",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Form Message",
        "message": "form",
        "text": "This is a text message.",
        "textType": "str",
        "html": "<b>This is an html message</b>",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "",
        "urlType": "str",
        "enableFullScreenView": "1",
        "viewSize": "1:2",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "slotSelectionForm",
        "formLocationType": "msg",
        "x": 350,
        "y": 1100,
        "wires": [
            [
                "f98bb5ba0e912b62"
            ]
        ]
    },
    {
        "id": "f98bb5ba0e912b62",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "New Msg?",
        "property": "slotsMsgId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 1100,
        "wires": [
            [
                "590954c737f00e27"
            ],
            [
                "0004dafa87abc0c6"
            ]
        ]
    },
    {
        "id": "590954c737f00e27",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 810,
        "y": 1100,
        "wires": [
            [
                "5cef292de698b7ea"
            ]
        ]
    },
    {
        "id": "5cef292de698b7ea",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Save Slots MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.slotsMsgId = msg.savedSlotsMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "0004dafa87abc0c6",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "slotsMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 820,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5dc29e09b8fcf911",
        "type": "smeFormSetup",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "saveLocation": "slotSelectionForm",
        "saveLocationType": "msg",
        "submitEnabled": "1",
        "retainStatus": "0",
        "submitText": "Book",
        "submitTextType": "str",
        "recipientId": "",
        "recipientIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "#:(file)::bookingSessionsChannelId",
        "channelIdType": "flow",
        "receiverType": "channel",
        "refName": "bookingRequest_slotSelectionForm",
        "refNameType": "str",
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "1ffc43563128b234"
            ]
        ]
    },
    {
        "id": "bae3c1aeb01a6e8e",
        "type": "smeFormComponent",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "",
        "reference": "slotsCalendar",
        "referenceType": "str",
        "component": "eventpicker",
        "title": "Choose Slot to book",
        "titleType": "str",
        "required": "true",
        "requiredType": "bool",
        "text": "",
        "textType": "str",
        "verticalList": "true",
        "verticalListType": "bool",
        "buttons": [],
        "choices": [],
        "choiceSelectionMode": "list",
        "switchValue": "false",
        "switchValueType": "bool",
        "sliderMin": 0,
        "sliderMinType": "num",
        "sliderMax": 10,
        "sliderMaxType": "num",
        "sliderStep": 0,
        "sliderStepType": "num",
        "sliderValue": 0,
        "sliderValueType": "num",
        "actionButtonTitle": "Select",
        "actionButtonTitleType": "str",
        "multiSelection": "false",
        "multiSelectionType": "bool",
        "bucketFilter": "all",
        "eventsDisplayMode": "buttons",
        "events": "calendarEvents",
        "eventsType": "msg",
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "f9101a9b461b13ac"
            ]
        ]
    },
    {
        "id": "32343510d7720d62",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Add 3 days to date",
        "rules": [
            {
                "t": "set",
                "p": "skipDays",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 920,
        "wires": [
            [
                "7a7e797bfbe8444e"
            ]
        ]
    },
    {
        "id": "7a7e797bfbe8444e",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Set days to return to 15",
        "rules": [
            {
                "t": "set",
                "p": "daysToReturn",
                "pt": "msg",
                "to": "15",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 920,
        "wires": [
            [
                "3e7acb6429615813"
            ]
        ]
    },
    {
        "id": "2a4945271125366b",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "StartDate defined?",
        "property": "startDate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 880,
        "wires": [
            [
                "9d246304e2a9d47b"
            ],
            [
                "32343510d7720d62"
            ]
        ]
    },
    {
        "id": "4141f55dd30b4792",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Set days to return to 1",
        "rules": [
            {
                "t": "set",
                "p": "daysToReturn",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 860,
        "wires": [
            [
                "3e7acb6429615813"
            ]
        ]
    },
    {
        "id": "729a3a7eb45f1b2e",
        "type": "smeFilter",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "connector": "f9adc5c8242ed986",
        "name": "",
        "filter": "submission",
        "reference": "bookingRequest_slotSelectionForm",
        "referenceType": "str",
        "messageId": "#:(file)::slotSelectionFormMessageId",
        "messageIdType": "flow",
        "extractValues": true,
        "chat": "p2p",
        "senderId": "",
        "senderIdType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "requestId": "savedRequestId",
        "requestIdType": "flow",
        "saveLocation": "filteredEvent",
        "saveLocationType": "msg",
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "d834a0d9e8f16f49"
            ]
        ]
    },
    {
        "id": "d834a0d9e8f16f49",
        "type": "change",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submitterId",
                "pt": "msg",
                "to": "_sme.receivedMsg.eventBody.dataComponent.submitterId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1360,
        "wires": [
            [
                "a084aa0c75b1853c"
            ]
        ]
    },
    {
        "id": "a084aa0c75b1853c",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Get valid submitter",
        "property": "submitterId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "neq",
                "v": "SME_ACCOUNT_ID",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 1360,
        "wires": [
            [],
            [
                "3290f2a11dd54627"
            ]
        ]
    },
    {
        "id": "3290f2a11dd54627",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Identify User session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    sessions.push({\n        accountId: msg.submitterId\n    });\n    msg.newUser = true;\n    msg.accountId = msg.submitterId\n} else {\n    msg.newUser = false;\n    msg.accountId = currentUser.accountId;\n    msg.searchMsgId = currentUser.searchMsgId;\n    msg.slotsMsgId = currentUser.slotsMsgId;\n    msg.paymentMsgId = currentUser.paymentMsgId;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1420,
        "wires": [
            [
                "5fe7aa5e14ed8aae"
            ]
        ]
    },
    {
        "id": "8d9b0737ed48871e",
        "type": "link call",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "links": [
            "e242d7534c8d4c04"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 800,
        "y": 1420,
        "wires": [
            [
                "78f4ee526a240826"
            ]
        ]
    },
    {
        "id": "cd7e40b58c4755db",
        "type": "smeMessage",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "",
        "message": "webview",
        "text": "This is a text message.",
        "textType": "str",
        "html": "",
        "htmlType": "str",
        "fileIds": "",
        "fileIdsType": "str",
        "contactIds": "",
        "contactIdsType": "str",
        "title": "MyTitle",
        "titleType": "str",
        "description": "",
        "descriptionType": "str",
        "start": 0,
        "startType": "num",
        "end": 0,
        "endType": "num",
        "allDay": "false",
        "allDayType": "bool",
        "locationName": "myLocation",
        "locationNameType": "str",
        "latitude": "",
        "latitudeType": "str",
        "longitude": "",
        "longitudeType": "str",
        "url": "paymentUrl",
        "urlType": "msg",
        "displayMode": "liveweb",
        "linkDisplayName": "",
        "linkDisplayNameType": "",
        "enableFullScreenView": "1",
        "viewSize": "2:1",
        "channelId": "",
        "channelIdType": "str",
        "tunnelId": "",
        "tunnelIdType": "str",
        "formLocation": "savedForm",
        "formLocationType": "flow",
        "x": 570,
        "y": 1480,
        "wires": [
            [
                "f9dc491d16d795fd"
            ]
        ]
    },
    {
        "id": "eacf5d7107ef6b2f",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_send",
        "actionText": "P2P - Send Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "",
        "messageIdType": "str",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "silent": "true",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedPaymentMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1060,
        "y": 1460,
        "wires": [
            [
                "cb727bc03427a8d3"
            ]
        ]
    },
    {
        "id": "78f4ee526a240826",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Prepare Payment Link",
        "func": "msg.paymentUrl = `${msg.bookedSlot.paymentUrl}?client_reference_id=${msg.accountId}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1480,
        "wires": [
            [
                "cd7e40b58c4755db"
            ]
        ]
    },
    {
        "id": "5fe7aa5e14ed8aae",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Extract booking slot",
        "func": "let bookingSlot = {};\n\nif (Array.isArray(msg.slotsCalendar) && typeof msg.slotsCalendar[0] === 'object') {\n  bookingSlot = {\n    day: msg.slotsCalendar[0].additionalInfo.day,\n    id: msg.slotsCalendar[0].additionalInfo.slotId\n  }\n}\n\nmsg.bookingSlot = bookingSlot;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1420,
        "wires": [
            [
                "8d9b0737ed48871e"
            ]
        ]
    },
    {
        "id": "cb727bc03427a8d3",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "Save Payment MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    currentUser.paymentMsgId = msg.savedPaymentMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "9d246304e2a9d47b",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "22a8be0a1056b48a",
        "name": "Determine how many days to skip",
        "func": "const defaultDaysToSkip = 3;\n\nlet specifiedDate = parseInt(moment(msg.startDate).endOf('day').format('x')) + 1;\nlet today = parseInt(moment().startOf('day').format('x'));\n\n//node.warn(\"startDate: \" + msg.startDate);\n//node.warn(\"specifiedDate: \"+ specifiedDate);\n//node.warn(\"today: \" + today);\n\nif (specifiedDate < today) {\n    return null;\n}\n\n\nlet daysDifference = moment.duration(specifiedDate - today).asDays();\n\n//node.warn(\"daysDifference: \" + daysDifference);\n\nmsg.skipDays = \n    daysDifference <= defaultDaysToSkip\n    ? defaultDaysToSkip - daysDifference\n    : 0;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment-timezone"
            }
        ],
        "x": 900,
        "y": 860,
        "wires": [
            [
                "4141f55dd30b4792"
            ]
        ]
    },
    {
        "id": "f9dc491d16d795fd",
        "type": "switch",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "name": "New Msg?",
        "property": "paymentMsgId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1480,
        "wires": [
            [
                "eacf5d7107ef6b2f"
            ],
            [
                "29ba1089da48acb1"
            ]
        ]
    },
    {
        "id": "29ba1089da48acb1",
        "type": "smeSender",
        "z": "b924b14dcda20cbb",
        "g": "fc5c3a27e3769f0f",
        "connector": "f9adc5c8242ed986",
        "async": "0",
        "name": "",
        "actionName": "p2p_message_update",
        "actionText": "P2P - Update Message",
        "recipientId": "accountId",
        "recipientIdType": "msg",
        "messageId": "paymentMsgId",
        "messageIdType": "msg",
        "limit": 0,
        "limitType": "num",
        "recipientIds": "",
        "recipientIdsType": "str",
        "groupChatId": "",
        "groupChatIdType": "str",
        "channelId": "",
        "channelIdType": "str",
        "silent": "false",
        "title": "",
        "titleType": "str",
        "saveLocation": "savedSlotsMsgId",
        "saveLocationType": "msg",
        "saveRequestIdLocation": "savedRequestId",
        "saveRequestIdLocationType": "flow",
        "cameraOptions": [],
        "cameraList": [],
        "logToConsole": false,
        "x": 1050,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "ef3f7c79d2099982",
        "type": "function",
        "z": "b924b14dcda20cbb",
        "g": "597f5f964bf25ad5",
        "name": "Reset Payment MsgId in session",
        "func": "let sessions = flow.get(\"userSessions\",\"file\");\n\nlet currentUser = sessions.find(u => u.accountId === msg.submitterId);\nif (currentUser === undefined) {\n    return null;\n} else {\n    delete currentUser.paymentMsgId;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 660,
        "wires": [
            [
                "fe091290511ddba6"
            ]
        ]
    },
    {
        "id": "f9adc5c8242ed986",
        "type": "sme-main-connector",
        "name": "SMECON",
        "apiKeyType": "env"
    }
]